# --- Defaults ---
token: ""
seed: 0
checkpoint_path: "" # Load a checkpoint from this path
load_step: 0 # Load model trained on this many timesteps (0 if choose max possible)
adv_agent_ids:  # choose which agent to be the traitor
  - 0

evaluate: False # Evaluate model for test_nepisode episodes dand quit (no training)
save_replay: False # Saving the replay of the model loaded from checkpoint_path

# --- adversarial policy options ---
n_adv_agents: 1

# for ours
gumbel_softmax: True
# for nothing
qtotal_cal: "none"
qtotal_ratio: 0.1

# for usenix
epsilon_state: 0.01
epsilon_action: 0.05
# for other
sample_benign_adv: True

# ---------adversarial training options---------------
adversarial_training: False  # make sure that checkpoint_path and adv_checkpoint path all has some model
switch_interval: 1
adversarial_status: 0
defense_learner: "ppo_learner"

# --- pymarl options ---
# runner: "episode" # Runs 1 env for an episode
# mac: "basic_mac" # Basic controller
env: "sc2" # Environment name
env_args: {} # Arguments for the environment

test_greedy: True # Use greedy evaluation (if False, will set epsilon floor to 0

t_max: 5050000 # Stop running after this many timesteps
test_nepisode: 20 # Number of episodes to test for
test_interval: 5000 # Test after {} timesteps have passed
log_interval: 5000 # Log summary of stats after every {} timesteps
runner_log_interval: 5000 # Log runner stats (not test stats) every {} timesteps
learner_log_interval: 5000 # Log training stats every {} timesteps
save_model_interval: 500000

use_cuda: True # Use gpu by default unless it isn't available
buffer_cpu_only: True # If true we won't keep all of the replay buffer in vram

# --- Logging options ---
use_tensorboard: True # Log results to tensorboard
save_model: True # Save the models to disk
local_results_path: "results" # Path for local results

# --- RL hyperparameters ---
gamma: 0.99
lr: 0.0001 # Learning rate for agents
optim_alpha: 0.99 # RMSProp alpha
optim_eps: 0.00001 # RMSProp epsilon
grad_norm_clip: 10 # Reduce magnitude of gradients above this L2 norm
add_value_last_step: True

# --- Agent parameters ---
agent: "rnn" # Default rnn agent
hidden_dim: 64 # Size of hidden state for default rnn agent
obs_agent_id: True # Include the agent's one_hot id in the observation
obs_last_action: True # Include the agent's last action (one_hot) in the observation

# ---maa and oracle parameters---
hidden_dim_ours: 64
lr_ours: 0.0001

# --- Experiment running params ---
repeat_id: 1
label: "default_label"
hypergroup: null